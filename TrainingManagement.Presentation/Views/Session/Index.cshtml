@model SessionSearchViewModel

@{
    ViewData["Title"] = "Training Courses";
}
<link href="~/Design/css/style.css" rel="stylesheet" />
<link href="~/css/select.css" rel="stylesheet" />
<style>
    i.far.fa-calendar {
        position: absolute;
        top: 49%;
        right: 23px;
        transform: translateY(-50%);
        cursor: pointer;
        color: #666;
    }

    .fa-calendar {
        position: absolute;
        right: 10px;
        top: 73%;
        transform: translateY(-55%);
        pointer-events: none;
    }

    .date-input-container {
        position: relative;
    }

        .date-input-container input[type="date"] {
            padding-right: 25px;
        }
</style>


<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h3 class="text-themecolor">Training Courses</h3>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="Session/index">Training Courses</a></li>
            <li class="breadcrumb-item active">List</li>
        </ol>
    </div>
</div>


<div class="row">
    <div class="col-12">
        <div class="card">



            <div class="card-body">
                <div>
                    <a asp-action="Create" class="btn btn-outline-dark m-2">Create New Courses</a>
                    <a asp-action="Update" asp-route-year="@DateTime.Now.Year" class="btn btn-outline-dark m-2">Update Current Courses</a>
                    @*               <a href="/Session/GenerateReport" class="btn btn-outline-info m-2">Export Excel <i class="bi bi-download"></i></a>
                    *@                    <a class="btn btn-outline-info m-2" onclick="Report()">Export to Excel <i class="bi bi-download"></i></a>

                </div>

            </div>
        </div>

    </div>
</div>


<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">

                <form id="searchForm" method="get" asp-controller="Session" asp-action="Search" class="m-2">
                    <div>
                        <div class="row">
                            <div class="col-4">
                                <!-- Year  -->
                                <div class="mb-3">
                                    <label for="Year" class="form-inline custom-label"> Year</label>
                                    <select id="Year" asp-for="Year" name="Year" class="form-select border-1">
                                        <option value="" id="standard-select">all</option>
                                        @foreach (var year in ViewBag.Year)
                                        {
                                            <option class="dropdown-item"  value="@year.NameEn">@year.NameEn</option>
                                        }
                                    </select>
                                    <span class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-4">
                                <!-- Type -->
                                <div class="mb-3">
                                    <label asp-for="Type" class="custom-label">Training Type</label>
                                    <select id="Type" asp-for="Type" name="Type" class="form-select b-1">
                                        <option value="">all</option>
                                        @foreach (var trainingType in ViewBag.Types)
                                        {
                                            <option value="@trainingType.NameEn">@trainingType.NameEn</option>
                                        }
                                    </select>
                                    <span class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-4">
                                <!-- TrainerName -->
                                <div class="mb-3">
                                    <label for="TrainerName" class="custom-label">Trainer Name</label>
                                    <select id="TrainerName" asp-for="TrainerName" name="TrainerName" class="form-select b-1">
                                        <option value="">all</option>
                                        @foreach (var trainer in ViewBag.Trainers)
                                        {
                                            <option value="@trainer.NameEn">@trainer.NameEn</option>
                                        }
                                    </select>
                                    <span class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-4">
                                <!-- TraineeName -->
                                <div class="mb-3">
                                    <label asp-for="TraineeName" class="custom-label">Trainee Name</label>
                                    <input id="TraineeName" asp-for="TraineeName" name="TraineeName" placeholder="Trainee Name" class="form-control" />
                                    <span class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-4">
                                <!-- Status -->
                                <div class="mb-3">
                                    <label for="Status" class="custom-label">Status</label>
                                    <select id="Status" asp-for="Status" name="Status" class="form-select b-1">
                                        <option value="">all</option>
                                        @foreach (var st in ViewBag.Status)
                                        {
                                            <option value="@st.NameEn">@st.NameEn</option>
                                        }
                                    </select>
                                    <span class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-4">
                                <!-- Result -->
                                <div class="mb-3">
                                    <label for="Result" class="custom-label">Result</label>
                                    <select id="Result" asp-for="Result" name="Result" class="form-select b-1">
                                        <option value="">all</option>
                                        @foreach (var result in ViewBag.Results)
                                        {
                                            <option value="@result.NameEn">@result.NameEn</option>
                                        }
                                    </select>
                                    <span class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-4">
                                <!-- topic -->
                                <div class="mb-3">
                                    <label for="topics" class="custom-label">Topics</label>
                                    <select id="Topic" asp-for="Topic" name="Topic" class="form-select b-1">
                                        <option value="">all</option>
                                        @foreach (var topic in ViewBag.Topics)
                                        {
                                            <option value="@topic.NameEn">@topic.NameEn</option>
                                        }
                                    </select>
                                    <span class="text-danger"></span>
                                </div>
                            </div>

                            <div class="col-4">
                                <!-- Start Date -->
                                <div class="mb-3">
                                    <label asp-for="StartDate" class="custom-label">Start Date</label>
                                    <input id="StartDate" asp-for="StartDate" name="StartDate" class="form-control " type="text" placeholder="Select Start Date" />
                                    <i class="far fa-calendar" id="StarxtDate"></i>

                                    <span asp-validation-for="StartDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-4">
                                <!-- End Date -->
                                <div class="mb-3">
                                    <label asp-for="EndDate" class="custom-label">End Date</label>
                                    <input id="EndDate" asp-for="EndDate" name="EndDate" class="form-control StartDateIcon" type="date" placeholder="Select End Date" />
                                    <i class="far fa-calendar StartDateIcon" id="ExndDate"></i>

                                    <span asp-validation-for="EndDate" class="text-danger"></span>
                                </div>
                            </div>

                        </div>
                    </div>
                    <input type="hidden" id="reportCriteria" name="reportCriteria" />

                    <div class="row">
                        <div class="col-12 text-center mt-5 ">
                            <!-- Search Button -->
                            <button type="button" id="searchButton" class="btn btn-outline-secondary w-25 mx-auto"><i class="bi bi-search"></i> Search</button>
                        </div>
                    </div>



                </form>
            </div>
        </div>

    </div>
</div>




<div class="col-12">
    <div class="card">

        <div class="card-body">
            @{
                List<SessionViewModel> sessionsViewModel = ViewBag.SessionsViewModel as List<SessionViewModel>;
            }
            <div class="table-responsive">
                <table id="session" class="table table-hover">
                    <thead></thead>
                    <tbody class="w-100"></tbody>

                </table>
            </div>


        </div>
    </div>

</div>







<link href="~/css/datatable.css" rel="stylesheet" />
<style>
    .input-group-append {
        cursor: pointer;
    }

    .color {
        background-color: #5272F2;
    }
</style>


<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.6/css/jquery.dataTables.min.css">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/2.0.0/css/buttons.dataTables.min.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.6/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/buttons/2.0.0/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.html5.min.js"></script>


@section Scripts{



    <script type="text/javascript">
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

        document.addEventListener('DOMContentLoaded', function () {
            flatpickr("#StartDate", {
                dateFormat: "Y-m-d",
                minDate: null,
                onChange: function (selectedDates, dateStr, instance) {
                    flatpickr("#EndDate", {
                        minDate: dateStr,
                    });
                },
            });

            flatpickr("#EndDate", {
                dateFormat: "Y-m-d",
                minDate: null,
            });
        });





        $(document).ready(function () {
            var dataTable = $('#session').DataTable({
                "paging": true,
                "pageLength": 10,
                "searching": false,
                "ordering": true,
                "autoWidth": true,
                "orderClasses": false,
                "language": {
                    "order": [],
                },
                "columns": [
                    { "title": "Trainee Name" },
                    { "title": "Trainer Name" },
                    { "title": "Topic" },
                    { "title": "Type" },
                    { "title": "Start Date" },
                    { "title": "End Date" },
                    { "title": "Status" },
                    { "title": "Result" },
                    { "title": " ", "sortable": false, "width": "150px" }
                ],
                "lengthMenu": [5, 8, 10],
                "pageLength": 5

            });


            var data = {
                Year: new Date().getFullYear().toString(),
            };

            //  populate the DataTable with data
            function populateTable(data) {
                dataTable.clear().draw();

                $.each(data, function (i, item) {
                    var editButton = `
                      <a class="waves-effect waves-dark btn-with-hand-cursor" onclick="editRow(${item.sessionId})"  data-toggle="tooltip" data-placement="top" title="Update">
                <i class="bi bi-pencil-fill text-black-50"></i>
              </a>`;

                    var deleteButton = `
                      <a class="mx-2 text-decoration-none btn-with-hand-cursor js-delete" data-id="${item.sessionId}"  data-toggle="tooltip" data-placement="top" title="Delete">
                <i class="bi bi-trash text-black-50"></i>
              </a>`;

                    var viewButton = `
                      <a class="mx-2 text-decoration-none btn-with-hand-cursor" onclick="Details(${item.sessionId})"  data-toggle="tooltip" data-placement="top" title="Detail">
                <i class="bi bi-eye-fill text-black-50"></i>
              </a>`;

                    var buttonsGroup = `<div class="d-inline-block">${viewButton}${editButton}${deleteButton}</div>`;

                    var trainingResult = item.trainingResult !== null ? item.trainingResult.nameEn : '-';


                    var row = [
                        item.traineeName,
                        item.trainerName.nameEn,
                        item.trainingTopic.nameEn,
                        item.trainingType.nameEn,
                        formatDate(item.startDate),
                        formatDate(item.expectedEndDate),
                        item.trainingStatus.nameEn,
                        trainingResult,
                        buttonsGroup
                    ];

                    dataTable.row.add(row).draw(false);
                });
            }

            function formatDate(dateString) {
                const date = new Date(dateString);
                const year = date.getFullYear();
                const month = String(date.getMonth() + 1).padStart(2, '0');
                const day = String(date.getDate()).padStart(2, '0');
                return `${year}-${month}-${day}`;
            }

            $('#session').on('click', '.js-delete', function () {
                var btn = $(this);
                bootbox.confirm({
                    message: 'Are you sure that you want to delete this Session?',
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-danger'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-secondary'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: `/Session/DeleteConfirmed/?id=${btn.data('id')}`,
                                method: 'POST',
                                success: function () {

                                    var rowToRemove = dataTable.row($(`[data-id="${btn.data('id')}"]`).closest('tr'));
                                    rowToRemove.remove().draw();

                                    Swal.fire({
                                        title: 'Success!',
                                        text: 'The session was deleted successfully',
                                        icon: 'success',
                                        confirmButtonText: 'OK'
                                    });

                                },
                                error: function () {
                                    Swal.fire({
                                        title: 'Error!',
                                        text: 'Something went wrong',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    });
                                }
                            });
                        }
                    }
                });
            });

            // search Button
            $('#searchButton').on('click', function () {

                var inputs = $("#searchForm input[type='text'], #searchForm input[type='date'], #searchForm select");
                var filled = false;

                inputs.each(function () {
                    if ($(this).val()) {
                        filled = true;
                        return false;
                    }
                });

                if (filled) {
                    var formData = {
                        Year: $('#Year').val(),
                        Type: $('#Type').val(),
                        Topic: $('#Topic').val(),
                        Status: $('#Status').val(),
                        TrainerName: $('#TrainerName').val(),
                        TraineeName: $('#TraineeName').val(),
                        Result: $('#Result').val(),
                        StartDate: $('#StartDate').val(),
                        EndDate: $('#EndDate').val()
                    };

                    function formatDate(date) {
                        const year = date.getFullYear();
                        const month = String(date.getMonth() + 1).padStart(2, '0');
                        const day = String(date.getDate()).padStart(2, '0');
                        return `${year}-${month}-${day}`;
                    }

                    $.ajax({
                        url: '/Session/Search',
                        type: 'GET',
                        data: formData,
                        success: function (data) {
                            populateTable(data);
                            var tableOffset = $('#session').offset().top;
                            $('html, body').animate({
                                scrollTop: tableOffset
                            }, 500);

                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Please fill in at least one input field.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }


            });

            // Initial population
            $.ajax({
                url: '/Session/Search',
                async: true,

                type: 'GET',
                success: function (data) {
                    populateTable(data);

                },
                error: function (error) {
                    console.log(error);
                }
            });
        });

        function editRow(id) {

            $.ajax({
                type: "get",
                url: "/session/UpdateSession",
                contentType: "application/json",
                data: { id: id },
                success: function (data) {
                    var url = `/session/UpdateSession?id=${id}`;
                    window.location.href = url;
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        title: 'Error!',
                        text: xhr.responseJSON.message,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        };

        function Details(id) {

            $.ajax({
                type: "get",
                url: "/session/Details",
                contentType: "application/json",
                data: { id: id },
                success: function (data) {
                    var url = `/session/Details?id=${id}`;
                    window.location.href = url;
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        title: 'Error!',
                        text: xhr.responseJSON.message,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        };

    </script>


    <script>
        function Report() {
            var formData = {
                Year: $('#Year').val(),
                Type: $('#Type').val(),
                Topic: $('#Topic').val(),
                Status: $('#Status').val(),
                TrainerName: $('#TrainerName').val(),
                TraineeName: $('#TraineeName').val(),
                Result: $('#Result').val(),
                StartDate: $('#StartDate').val(),
                EndDate: $('#EndDate').val()
            };

            $.ajax({
                url: '/Session/GenerateReportwithSearch',
                type: 'GET',
                data: formData,
                xhrFields: {
                    responseType: 'blob'
                },
                success: function (data) {
                    var blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });

                    var url = window.URL.createObjectURL(blob);

                    var a = document.createElement('a');
                    a.href = url;
                    a.download = 'SessionsReport.xlsx';

                    document.body.appendChild(a);
                    a.click();

                    window.URL.revokeObjectURL(url);

                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
    </script>

    @{
        <partial name="_ValidationScriptsPartial" />
    }
}



