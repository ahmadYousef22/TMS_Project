@using Microsoft.AspNetCore.Identity
@using TrainingManagment.Domain.consts
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        @if(UserManager.GetUserAsync(User).Result.ProfilePicture != null)
        {
            <li class="nav-item">
                <img class="rounded-circle" alt="profile"
                     style="height: 40px; width: 40px; object-fit: cover"
                     src="data:image/*;base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.ProfilePicture))" />
            </li>
        }
        <li class="nav-item" >
            <a   id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Welcome @UserManager.GetUserName(User)</a>
    </li>
    <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark"><i class="bi bi-box-arrow-in-right"></i></button>
        </form>
        </li>
    }
    else
    {
        @if (User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
        }
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
